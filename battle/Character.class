// Source code is decompiled from a .class file using FernFlower decompiler (from Intellij IDEA).
package characters;

import java.util.Random;

public abstract class Character {
   private String name;
   private int hp;
   private int maxHp;
   private int currMana;
   private int maxMana;
   private int regenMana;
   private Random random;

   public Character(String var1, int var2, int var3, int var4) {
      this.name = var1;
      this.maxHp = var2;
      this.hp = var2;
      this.maxMana = var3;
      this.currMana = var3;
      this.regenMana = var4;
      this.random = new Random();
   }

   public void regenerateMana() {
      this.currMana = Math.min(this.maxMana, this.currMana + this.regenMana);
   }

   protected void performAttack(Character var1, int var2, int var3, int var4, String var5) {
      if (this.currMana < var4) {
         System.out.println(this.name + " does not have enough mana for " + var5 + "! (Costs " + var4 + ", has " + this.currMana + ")");
      } else {
         this.currMana -= var4;
         int var6 = var2 + this.random.nextInt(var3 - var2 + 1);
         var1.takeDamage(var6);
         System.out.println(this.name + " uses " + var5 + " and deals " + var6 + " damage to " + var1.name + "!");
      }
   }

   public abstract void basicAttack(Character var1);

   public abstract void secondarySkill(Character var1);

   public abstract void ultimateSkill(Character var1);

   public void takeDamage(int var1) {
      this.hp -= var1;
      if (this.hp < 0) {
         this.hp = 0;
      }

   }

   public boolean isAlive() {
      return this.hp > 0;
   }

   public String getName() {
      return this.name;
   }

   public int getHealth() {
      return this.hp;
   }

   public int getMaxHealth() {
      return this.maxHp;
   }

   public int getCurrentMana() {
      return this.currMana;
   }

   public int getMaxMana() {
      return this.maxMana;
   }

   public void setName(String var1) {
      this.name = var1;
   }
}
